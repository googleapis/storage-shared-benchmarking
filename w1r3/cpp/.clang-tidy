---
# Configure clang-tidy for this project.

# Here is an explanation for why some of the checks are disabled:
#
#  -modernize-use-trailing-return-type: clang-tidy recommends using
#      `auto Foo() -> std::string { return ...; }`, we think the code is less
#      readable in this form.
#
Checks: >
  -*,
  abseil-*,
  bugprone-*,
  google-*,
  misc-*,
  modernize-*,
  performance-*,
  portability-*,
  readability-*,
  -modernize-use-trailing-return-type

# Turn all the warnings from the checks above into errors.
WarningsAsErrors: "*"

HeaderFilterRegex: "(google/cloud/|generator/).*\\.h$"

CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,          value: lower_case }
  - { key: readability-identifier-naming.ClassCase,              value: lower_case }
  - { key: readability-identifier-naming.StructCase,             value: lower_case }
  - { key: readability-identifier-naming.TemplateParameterCase,  value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,           value: lower_case }
  - { key: readability-identifier-naming.VariableCase,           value: lower_case }
  - { key: readability-identifier-naming.ClassMemberCase,        value: lower_case }
  - { key: readability-identifier-naming.ClassMemberSuffix,      value: _          }
  - { key: readability-identifier-naming.PrivateMemberSuffix,    value: _          }
  - { key: readability-identifier-naming.ProtectedMemberSuffix,  value: _          }
  - { key: readability-identifier-naming.EnumConstantCase,       value: CamelCase  }
  - { key: readability-identifier-naming.EnumConstantPrefix,     value: k          }
  - { key: readability-identifier-naming.ConstexprVariableCase,  value: lower_case }
  - { key: readability-identifier-naming.GlobalConstantCase,     value: lower_case }
  - { key: readability-identifier-naming.MemberConstantCase,     value: lower_case }
  - { key: readability-identifier-naming.StaticConstantCase,     value: lower_case }
  - { key: readability-implicit-bool-conversion.AllowIntegerConditions,  value: 1  }
  - { key: readability-implicit-bool-conversion.AllowPointerConditions,  value: 1  }
